---
- name: start libvirt daemon
  service:
    name: libvirtd
    state: started

- name: check if ocp nat already exists
  virt_net:
    command: list_nets
  register: all_nets

- name: destroy old ocp nat
  virt_net:
    command: destroy
    name: ocp
  when: "'ocp' in all_nets.list_nets"

- name: undefine old ocp nat
  virt_net:
    command: undefine
    name: ocp
  when: "'ocp' in all_nets.list_nets"

- name: check if vms already exists
  virt:
    command: list_vms
  register: all_vms

- name: destroy old bootstrap
  shell: |
    virsh destroy {{ item.name }}
    virsh undefine --remove-all-storage {{ item.name }}
  when: 'item.name in all_vms.list_vms'
  with_items: "{{ bootstrap }}"

- name: destroy old master
  shell: |
    virsh destroy {{ item.name }}
    virsh undefine --remove-all-storage {{ item.name }}
  when: 'item.name in all_vms.list_vms'
  with_items: "{{ master }}"

- name: destroy old worker
  shell: |
    virsh destroy {{ item.name }}
    virsh undefine --remove-all-storage {{ item.name }}
  when: 'item.name in all_vms.list_vms'
  with_items: "{{ worker }}"

- name: stop libvirt daemon
  service:
    name: libvirtd
    state: stopped

- name: stop dnsmasq daemon
  service:
    name: dnsmasq
    state: stopped

- name: stop nginx daemon
  service:
    name: nginx
    state: stopped

- name: check old working dir
  stat:
    path: "/root/openshift-ansible-kvm"
  register: chk_file

- name: remove old working dir
  file:
    path: /root/openshift-ansible-kvm
    state: absent
  when:
    - chk_file.stat.exists == true
    - cleanup.conf == true

- name: check old hosts.ocp for dnsmasq
  stat:
    path: "/etc/hosts.ocp"
  register: chk_file

- name: remove old /etc/hosts.ocp for dnsmasq
  file:
    path: /etc/hosts.ocp
    state: absent
  when:
    - chk_file.stat.exists == true
    - cleanup.conf == true

- name: check old dnsmasq.d/ocp.conf
  stat:
    path: "/etc/dnsmasq.d/ocp.conf"
  register: chk_file

- name: remove old dnsmasq.d/ocp.conf
  file:
    path: /etc/dnsmasq.d/ocp.conf
    state: absent
  when:
    - chk_file.stat.exists == true
    - cleanup.conf == true

# want fix: maybe we need Implementation of file stat before deletion
- name: remove old nginx dir
  file:
    path: "/usr/share/nginx/html/{{ item }}"
    state: absent
  with_items:
    - ipxe
    - ocp
  when:
    - cleanup.bin == true
  ignore_errors: yes

# want fix: maybe we need Implementation of file stat before deletion
- name: remove old clients
  file:
    path: "/root/bin/{{ item }}"
    state: absent
  with_items:
    - kubectl
    - oc
    - openshift-install
  when:
    - cleanup.bin == true
  ignore_errors: yes
