---
- virt_net:
    command: list_nets
  register: all_nets

- virt_net:
    command: destroy
    name: ocp
  when: 'ocp in all_nets.list_nets'

- virt_net:
    command: undefine
    name: ocp
  when: 'ocp in all_nets.list_nets'

- name: check if master already exists
  virt:
    command: list_vms
  register: all_vms

- name: destroy old bootstrap
  shell: |
    virsh destroy {{ item.name }}
    virsh undefine --remove-all-storage {{ item.name }}
  when: 'item.name  in all_vms.list_vms'
  with_items: "{{ bootstrap }}"

- name: destroy old master
  shell: |
    virsh destroy {{ item.name }}
    virsh undefine --remove-all-storage {{ item.name }}
  when: 'item.name  in all_vms.list_vms'
  with_items: "{{ master }}"

- name: destroy old worker
  shell: |
    virsh destroy {{ item.name }}
    virsh undefine --remove-all-storage {{ item.name }}
  when: 'item.name  in all_vms.list_vms'
  with_items: "{{ worker }}"

- name: stop libvirt daemon
  service:
    name: libvirtd
    state: stopped

- name: stop dnsmasq daemon
  service:
    name: dnsmasq
    state: stopped

- name: stop nginx daemon
  service:
    name: nginx
    state: stopped
